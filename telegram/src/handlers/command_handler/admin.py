from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.enums import ParseMode

from src.filters import IsAdmin
from src.utils import get_entity_respone
from src.postgres.crud.read import get_entitys
from src.postgres.models import Admins, Professors

router = Router()


@router.message(Command("admin"), IsAdmin())
async def admin_handler(message: Message):
    await message.answer(
        text="""
üõ†Ô∏è <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã</b> üõ†Ô∏è

<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–æ–≤</b>
‚ñ´Ô∏è /add_engineers - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤
‚ñ´Ô∏è /add_professors - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤

<b>–£–¥–∞–ª–µ–Ω–∏–µ —é–∑–µ—Ä–æ–≤</b>
‚ñ´Ô∏è /delete_engineers - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤
‚ñ´Ô∏è /delete_professors - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤

<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</b>
‚ñ´Ô∏è /list_engineers - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–∂–µ–Ω–µ—Ä–æ–≤
‚ñ´Ô∏è /list_professors - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
‚ñ´Ô∏è /find_user &lt;id/username&gt; - –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

/reassign &lt;task_id&gt; &lt;engineer_id&gt; - –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É

<b>–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã</b>
‚ñ´Ô∏è /broadcast &lt;text&gt; - –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
""",
        parse_mode=ParseMode.HTML,
    )


@router.message(Command("add_engineer"), IsAdmin())
async def add_engineers_handler(message: Message):
    await message.answer(text="–í–≤–µ–¥–∏—Ç–µ —Ç—ç–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (@–ø—Ä–∏–º–µ—Ä):")
    admins = await Admins
    for admin in admins:
        await message.answer(text=get_entity_respone(admin))


@router.message(Command("add_professor"), IsAdmin())
async def add_professors_handler(message: Message):
    admins = await get_entitys(Admins)
    for admin in admins:
        await message.answer(text=get_entity_respone(admin))


@router.message(Command("delete_engineer"), IsAdmin())
async def delete_engineers_handler(message: Message):
    admins = await get_entitys(Admins)
    for admin in admins:
        await message.answer(text=get_entity_respone(admin))


@router.message(Command("delete_professor"), IsAdmin())
async def delete_professors_handler(message: Message):
    admins = await get_entitys(Admins)
    for admin in admins:
        await message.answer(text=get_entity_respone(admin))


@router.message(Command("list_professors"), IsAdmin())
async def list_professors_handler(message: Message):
    admins = await get_entitys(Admins)
    for admin in admins:
        await message.answer(text=get_entity_respone(admin))


@router.message(Command("list_engineers"), IsAdmin())
async def list_engineers_handler(message: Message):
    professors = await get_entitys(Professors)
    for professor in professors:
        await message.answer(text=get_entity_respone(professor))
